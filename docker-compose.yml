version: '3'
services:
  demo-db:
    image: mysql
    # 若服务器支持 x86 和 ARM 两种架构运行时
    platform: 'linux/amd64'
    container_name: demo-db
    restart: always
    # 以 root 用户运行容器，这是 MySQL 官方要求的
    user: root
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: qwe@123
      MYSQL_DATABASE: demo
    ports:
      - '3307:3306'
    volumes:
      # 初始化数据库表脚本，仅当容器第一次启动并且数据库为空（即数据目录为空）时执行
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
      # 将数据库数据存放在宿主机中：`/Users/wxj/Downloads/demo/db`
      - /Users/wxj/Downloads/demo/db:/var/lib/mysql
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost' ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - demo_network

  demo-redis:
    image: redis
    platform: 'linux/amd64'
    container_name: demo-redis
    restart: always
    environment:
      TZ: Asia/Shanghai
    ports:
      - '6380:6379'
    volumes:
      - /Users/wxj/Downloads/demo/redis:/data
    command: [ 'redis-server','--save', '60', '1', '--loglevel', 'warning','--requirepass','qwe@123' ]
    healthcheck:
      test: [ 'CMD','redis-cli','ping' ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - demo_network

  demo-web:
    image: openjdk:17-jdk-slim
    platform: 'linux/amd64'
    container_name: demo-web
    restart: always
    environment:
      TZ: Asia/Shanghai
    # 当容器启动时，所有的命令都将在 `/opt` 目录中执行
    # 为了使 Spring Boot 项目自动识别 `/opt/config/application.yml`
    working_dir: /opt
    ports:
      - '8081:8080'
    volumes:
      # JAR 包所在路径，注意 `application.yml` 中使用的 MySQL 连接：
      # `docker compose up -d` 运行时：`jdbc:mysql://demo-db:3306`
      # `docker run` 运行时：`jdbc:mysql://host.docker.internal:3307`
      # 注意：容器内配置文件为 `localhost` 指的是容器自身，而不是宿主机
      - /Users/wxj/Downloads/demo/web/web-0.0.1-SNAPSHOT.jar:/opt/web.jar
      # 使得配置文件可放在容器外（即宿主机中）：`/Users/wxj/Downloads/demo/web/application.yml`
      - /Users/wxj/Downloads/demo/web/config:/opt/config
    depends_on:
      demo-db:
        condition: service_healthy
      demo-redis:
        condition: service_healthy
    command: [ 'java', '-Djasypt.encryptor.password=wxj#secret_', '-jar', '/opt/web.jar' ]
    networks:
      - demo_network

networks:
  demo_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: demo_network

# 启动命令：docker compose up -d