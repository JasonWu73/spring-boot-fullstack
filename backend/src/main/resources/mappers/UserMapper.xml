<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.wuxianjie.web.user.UserMapper">
  <select id="selectById" resultType="net.wuxianjie.web.user.User">
    SELECT id,
           created_at      AS createdAt,
           updated_at      AS updatedAt,
           remark,
           username,
           nickname,
           hashed_password AS hashedPassword,
           status,
           authorities
    FROM user
    WHERE id = #{id}
  </select>

  <select id="selectByUsername" resultType="net.wuxianjie.web.user.User">
    SELECT id,
           created_at      AS createdAt,
           updated_at      AS updatedAt,
           remark,
           username,
           nickname,
           hashed_password AS hashedPassword,
           status,
           authorities
    FROM user
    WHERE username = #{username}
  </select>

  <resultMap id="userBaseMap" type="net.wuxianjie.web.user.UserInfo">
    <constructor>
      <idArg column="id" javaType="long" />
      <arg column="created_at" javaType="java.time.LocalDateTime" />
      <arg column="updated_at" javaType="java.time.LocalDateTime" />
      <arg column="remark" javaType="string" />
      <arg column="username" javaType="string" />
      <arg column="nickname" javaType="string" />
      <arg column="status" javaType="net.wuxianjie.web.user.AccountStatus" />
      <arg column="authorities" javaType="string" />
    </constructor>
  </resultMap>

  <select id="selectInfoById" resultMap="userBaseMap">
    SELECT id,
           created_at,
           updated_at,
           remark,
           username,
           nickname,
           status,
           authorities
    FROM user
    WHERE id = #{userId}
  </select>

  <select id="selectByQueryLimit" resultMap="userBaseMap">
    SELECT
    id,
    created_at,
    updated_at,
    remark,
    username,
    nickname,
    status,
    authorities
    FROM user
    <include refid="whereQuery" />
    ORDER BY updated_at DESC
    LIMIT #{p.offset}, #{p.pageSize}
  </select>

  <select id="countByQuery" resultType="long">
    SELECT COUNT(1)
    FROM user
    <include refid="whereQuery" />
  </select>

  <sql id="whereQuery">
    <where>
      <if test="q.username != null">
        AND username LIKE #{q.username}
      </if>
      <if test="q.nickname != null">
        AND nickname LIKE #{q.nickname}
      </if>
      <if test="q.status != null">
        AND status = #{q.status}
      </if>
      <if test="q.authority != null">
        AND (
        authorities = #{q.authority}
        OR authorities LIKE CONCAT(#{q.authority}, ',%')
        OR authorities LIKE CONCAT('%,', #{q.authority}, ',%')
        OR authorities LIKE CONCAT('%,', #{q.authority})
        )
      </if>
    </where>
  </sql>

  <update id="updateById">
    UPDATE user
    SET updated_at      = #{updatedAt},
        remark          = #{remark},
        nickname        = #{nickname},
        hashed_password = #{hashedPassword},
        status          = #{status},
        authorities     = #{authorities}
    WHERE id = #{id}
  </update>
</mapper>
